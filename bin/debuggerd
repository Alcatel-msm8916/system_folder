#!/system/bin/.krsh

API_LEVEL=$(cat /system/build.prop | grep "ro.build.version.sdk=" | dd bs=1 skip=21 count=2)
SUPERUSER_NAME=Kinguser


func_kr_isBrandSony() {
	PRODUCT_BRAND=$(getprop ro.product.brand)
	if [ "$PRODUCT_BRAND" = "Sony" -o "$PRODUCT_BRAND" = "sony" ]; then
		echo 1
	else
		echo 0
	fi
}

func_wait_system_server()
{
	while [ -z `pidof -s system_server` ]; do
		echo "waiting for system_server"
		sleep 1
	done
}

func_wait_package_manager()
{
	while [ ! -z `pidof -s system_server` ]; do
		echo "waiting for package_manager"
		service list | grep -p "android.content.pm.IPackageManager" > /dev/null 2>&1 && break
		sleep 1
	done
	sleep 1
}

func_kr_isInstalled() {
	pm path com.kingroot.kinguser | grep -q "package:" > /dev/null && echo 1 || echo 0
}

func_kr_kill() {
	K_PID=$(/system/xbin/pidof -s $1)
	if [ ! -z "$K_PID" ]; then
		echo "killing $1, pid is $K_PID ..."
		kill -STOP $K_PID
		kill -9 $K_PID
	fi
}

func_kr_remove_and_kill() {
	if [ ! -f "$1.kr" ]; then
		cat $1 > $1.kr	
	fi
	rm -f $1
	func_kr_kill $2
}

func_kr_no_exec_and_kill() {
	chmod 00644 $1
	func_kr_kill $2
	chmod 00644 $1
	func_kr_kill $2
}

func_bypass_ric() {
	if [ "$(func_kr_isBrandSony)" = "1" ]; then
		if [ -f "/system/xbin/krdem" ]; then
			/system/xbin/krdem kingroot-dev 4
		elif [ -f "/system/bin/.krric.log" -a -f "/system/lib/modules/wp_mod.ko" ]; then
			insmod /system/lib/modules/wp_mod.ko
		fi
	fi
}

func_bypass_coolsec() {
	if [ -f "/sbin/coolsec" -o -f "/sbin/coolsec.kr" ]; then
		func_wait_system_server
		func_wait_package_manager

		echo "bypassing coolsec ..."		
		mount -o remount,rw /

		chmod 0644 /sbin/coolsec
		func_kr_kill obsv
		func_kr_kill coolsec
		setprop clt.stop coolsec

		#func_kr_remove_and_kill /sbin/coolsec coolsec
		#func_kr_remove_and_kill /sbin/coolsec obsv

		#func_kr_remove_and_kill /sbin/coolsec coolsec
		#func_kr_remove_and_kill /sbin/coolsec obsv
		
		sleep 0.5

		echo "listing coolsec ..."
		ls -l /sbin/coolsec
		ls -l /sbin/coolsec.kr
		ps | grep coolsec
		ps | grep obsv

		echo "rooting ..."
		mount -o remount,rw /system
		mount

		if [ -f "/system/xbin/ku.sud" ]; then
			cat /system/xbin/ku.sud > /system/xbin/su
			chown 0.0 /system/xbin/su
			chmod 00755 /system/xbin/su
			chcon u:object_r:system_file:s0 /system/xbin/su
			ln -s /system/xbin/su /system/bin/su
			chown 0.0 /system/bin/su
			chmod 00755 /system/bin/su
			chcon u:object_r:system_file:s0 /system/bin/su
		fi
	
		if [ "$(func_kr_isInstalled)" != "1" ]; then			
			KU_SRC_FULL_PATH=/system/app/$SUPERUSER_NAME.apk.cool
			if [ "$API_LEVEL" -ge "21" ]; then
				KU_SRC_FULL_PATH=/system/app/$SUPERUSER_NAME/$SUPERUSER_NAME.apk.cool
			fi
			echo "$KU_SRC_FULL_PATH"

			if [ -f "$KU_SRC_FULL_PATH" ]; then
				rm -f /data/local/tmp/$SUPERUSER_NAME.apk
				cat $KU_SRC_FULL_PATH > /data/local/tmp/$SUPERUSER_NAME.apk
				chown 0.0 /data/local/tmp/$SUPERUSER_NAME.apk
				chmod 00644 /data/local/tmp/$SUPERUSER_NAME.apk
				chcon u:object_r:system_file:s0 /data/local/tmp/$SUPERUSER_NAME.apk
				pm install -r -d /data/local/tmp/$SUPERUSER_NAME.apk
				rm -f /data/local/tmp/$SUPERUSER_NAME.apk
			fi
		fi

		mount -o remount,ro /system
	fi
}

func_do_and_launch() {
	func_bypass_ric
	func_bypass_coolsec	
	
	echo "launching daemon ..."
	/system/xbin/ku.sud -d &
}

KR_TMP_FNAME=krperm

LOG_FILE_TMP=/data/local/tmp/$KR_TMP_FNAME.txt.tmp
LOG_FILE=/data/local/tmp/$KR_TMP_FNAME.txt

rm -f $LOG_FILE_TMP
rm -f $LOG_FILE

setenforce 0
/system/xbin/supolicy --live
/system/xbin/supolicy --live "permissive init"
/system/xbin/supolicy --live "permissive kernel"
/system/xbin/supolicy --live "permissive toolbox"
/system/xbin/supolicy --live "permissive toolbox_exec"
/system/xbin/supolicy --live "permissive s_init_shell"
/system/xbin/supolicy --live "permissive init_shell"
/system/xbin/supolicy --live "permissive shell"
/system/xbin/supolicy --live "permissive su"
/system/xbin/supolicy --live "permissive adbd"
setenforce 0

echo "[$0] begin ..." > $LOG_FILE_TMP
chmod 0777 $LOG_FILE_TMP

id >> $LOG_FILE_TMP  2>&1
echo "API_LEVEL=$API_LEVEL" >> $LOG_FILE_TMP  2>&1

func_do_and_launch >> $LOG_FILE_TMP 2>&1

echo "[$0] end!" >> $LOG_FILE_TMP

chcon u:object_r:shell_data_file:s0 $LOG_FILE_TMP
chown shell.shell $LOG_FILE_TMP
chmod 00644 $LOG_FILE_TMP
mv $LOG_FILE_TMP $LOG_FILE
#sync

echo "launching debuggerd_real ..."
/system/bin/debuggerd_real