# This script runs last, after all network configuration
# has completed. It sets a property to let the framework
# know that setting up the interface is complete.

if [[ $interface == p2p* ]]
    then
    intf=p2p
    else
    intf=$interface
fi

# For debugging:
setprop dhcp.${intf}.reason "${reason}"

#[FEATURE]-MOD-BEGIN by TCTNB.ZhangJie,09/06/2013,518310
#Add autoIP solution
case "${reason}" in
BOUND|INFORM|REBIND|REBOOT|RENEW|TIMEOUT)
    setprop dhcp.${intf}.ipaddress  "${new_ip_address}"
    setprop dhcp.${intf}.gateway    "${new_routers%% *}"
    setprop dhcp.${intf}.mask       "${new_subnet_mask}"
    setprop dhcp.${intf}.leasetime  "${new_dhcp_lease_time}"
    setprop dhcp.${intf}.server     "${new_dhcp_server_identifier}"
    setprop dhcp.${intf}.vendorInfo "${new_vendor_encapsulated_options}"
    setprop dhcp.${intf}.mtu        "${new_interface_mtu}"

    setprop dhcp.${intf}.result "ok"
    ;;
EXPIRE|FAIL|STOP)
    setprop dhcp.${intf}.result "failed"
    ;;

IPV4LL)
    case "${autoIP}" in
    1)
        setprop dhcp.${interface}.ipaddress "${new_ip_address}"
        setprop dhcp.${interface}.gateway   "${new_routers%% *}"
        setprop dhcp.${interface}.mask      "${new_subnet_mask}"
        setprop dhcp.${interface}.leasetime "${new_dhcp_lease_time}"
        setprop dhcp.${interface}.server    "${new_dhcp_server_identifier}"

        setprop dhcp.${interface}.result "ok"
        ;;

    *)
        setprop dhcp.${interface}.result "failed"
        ;;
    esac;;
#[FEATURE]-MOD-END by TCTNB.ZhangJie


RELEASE)
    setprop dhcp.${intf}.result "released"
    ;;
esac
